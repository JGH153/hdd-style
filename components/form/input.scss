$form-input-padding: 12px;
$form-input-border: 1px solid var(--hdd-color-grey-border);
$form-input-padding-bottom: 9px;

.hdd-form_input {
  // Variable containing '&' to jump to current parent inside a child class.
  $this: &;
  display: flex;
  align-items: center;
  padding-left: var(--hdd-spacing-1);
  padding-top: var(--hdd-spacing-1);
  padding-bottom: $form-input-padding-bottom;
  border: $form-input-border;
  border-radius: $border-radius;
  background: var(--hdd-color-white);

  > input {
    // .is-p is font-properties, defined in typography
    @extend .is-p;
    width: 100%;
    padding: 0;
    border: none;
    background: transparent;

    &::placeholder {
      color: var(--hdd-color-grey);
    }  
  }

  &:not(.is-invalid):focus-within {
    @extend .hdd-form_input, .is-focus;
  }

  &.is-focus {
    border-color: var(--hdd-color-blue-dark);
  }

  &.is-invalid {
    border-color: var(--hdd-color-signal-red);

    &#{$this}_icon,
    &#{$this} svg,
    &#{$this} i {
      color: var(--hdd-color-signal-red);
    }
  }

  &.is-disabled {
    border-color: var(--hdd-color-grey);
    input {
      color: var(--hdd-color-grey);
      cursor: not-allowed;
    }
    &#{$this}_icon,
    &#{$this} svg,
    &#{$this} i {
      color: var(--hdd-color-grey);
    }
  }

  &_icon,
  > svg,
  > i {
    transition: color $medium-transition $transition-cubic;
    font-size: font-size(icon-small);
    color: var(--hdd-color-blue-dark);
    margin-right: var(--hdd-spacing-1);
  }
}
