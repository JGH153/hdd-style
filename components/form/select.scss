.hdd-form_select {
  // Variable containing '&' to jump to current parent inside a child class.
  $this: &;

  display: flex;
  position: relative;
  align-items: center;
  left: 0%;
  right: 0%;
  top: 0%;
  bottom: 0%;

  background: var(--hdd-white);
  border: 1px solid var(--hdd-grey-border);
  border-radius: 4px;

  width: 10.4375rem;



  
  select {

  display: inline-block;
  width: 100%;
  outline: none;
  }

.selecet-trigger {
  cursor: pointer;
  position: relative;
  box-sizing: border-box;

  .select-disabled & {
    user-select: none;
    cursor: default;
  }
}

.select-value {
  display: table-cell;
  max-width: 0;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Se over
.mat-select-value-text {
  @include mat-truncate-line();
}

.select-arrow-wrapper {
  display: table-cell;
  vertical-align: middle;

 // Her kan det legges til en del info om hvordan arrow wrapperen skal oppfÃ¸re seg i forskjellige kontekster
 // When used in a box appearance form-field the arrow should be shifted up 50%.
  // .mat-form-field-appearance-fill & {
  //   transform: translateY(-50%);
  // }

  // When used in a outline form-field the arrow should be shifted up 25%.
  // .mat-form-field-appearance-outline & {
  //   transform: translateY(-25%);
  // }

  // When used in a standard appearance form-field the arrow should be shifted up 50%,
  // but only if it's not empty and it has a label.
  // .mat-form-field-appearance-standard.mat-form-field-has-label
  //   .mat-select:not(.mat-select-empty) & {
  //     transform: translateY(-50%);
  //   }

  // Animate the arrow position, but only when the transitioning to empty (animate the arrow down)
  // This is in line with the mat-form-field label animation
  // .mat-form-field-appearance-standard .mat-select.mat-select-empty & {
  //   transition: transform $swift-ease-out-duration $swift-ease-out-timing-function;
  // }

  // ._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty & {
  //   transition: none;
  // }
}

.select-arrow {
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid;
  margin: 0 4px ;
}

.select-panel-wrap {
  // Prevents width-issues of mat-select-panel with width: calc(100% + 32px)
  // in IE11 due to the parents display: flex;
  flex-basis: 100%;
}

.select-panel {
  // @include mat-menu-base();
  padding-top: 0;
  padding-bottom: 0;
  max-height: 256px;
  min-width: 100%; // prevents some animation twitching and test inconsistencies in IE11
  border-radius: 4px;

  // @include cdk-high-contrast {
  //   outline: solid 1px;
  // }
}
 


  // &:focus-within {
  //   @extend .hdd-form_select, .is-focus;
  // }

  // &.is-focus {
  //   border-color: var(--hdd-grey);

  //   select {
  //     color: var(--hdd-grey);
  //   }

  //   #{$this}_icon,
  //   > svg,
  //   > i {
  //     opacity: 1;
  //     color: var(--hdd-primary);
  //   }
  // }

  // &.is-invalid {
  //   border-color: var(--hdd-signal-red);

  //   select {
  //     color: var(--hdd-signal-red);
  //   }

  //   i {
  //     opacity: 1;
  //     color: var(--hdd-signal-red);
  //   }
  // }

  // &.is-disabled {
  //   background: var(--hdd-grey-light);
  //   cursor: default;
  // }

  // &.has-icon {
  //   select {
  //     padding-left: calc(#{$form-input-icon-margin} + #{font-size(h2)} + #{$form-input-padding-left});
  //   }
  // }

  // &_icon,
  // > svg,
  // > i {
  //   position: absolute;
  //   transition: color $medium-transition $transition-cubic, opacity $medium-transition $transition-cubic;
  //   opacity: 0.44;
  //   color: var(--hdd-black);
  //   font-size: font-size(h2);

  //   &:first-child {
  //     left: $form-select-icon-margin;
  //   }

  //   &:last-child {
  //     right: $form-select-icon-margin;
  //   }
  // }
}